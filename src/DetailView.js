import { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import { pb } from "./Config";
import { computeDayDiffFromStringDates, computeNiceExpiryDate, formatUnixDate } from "./Utils";


const DetailView = ({authValid, userId}) => {
    const {id} = useParams();
    const navigate = useNavigate();

    const [copyButtonContent, setCopyButtonContent] = useState('Copy');
    const [data, setData] = useState({
        creatorUserId:'',
        dbName:'',
        description:'',
        id:''
    }
    );

    useEffect(() => {
        const getData = async () => {
            try{
                setData(
                    await pb.collection('instances').getOne(id)
                    );
            } catch (e) {
                if (e.status === 0){
                    console.log('PB SDK auto-reject: multiple calls at once')
                } else {
                    console.error(e);
                }
            }
            
        }
        if (authValid){
            getData();
        } else {
            setData([]);
        }
    }, [id, authValid]);
    
    const connectionString = `postgresql://${data.dbUser}:${data.dbPassword}@localhost:5432/${data.dbName}`
    const psqlCommandString = `psql -h localhost -p 5432 -U ${data.dbUser} -d ${data.dbName}`

    const handleDeletionRequest = () => {
        pb.collection('instances').update(
            data.id,
            {
                deletionRequestDate : computeNiceExpiryDate(0)
            }
        )
        setTimeout(() => {navigate("/")}, 500)
    }
    
    const updateCopyButton = (material) => {
        navigator.clipboard.writeText(material)
        setCopyButtonContent("Copied!")
        setTimeout(() => {
            setCopyButtonContent("Copy")
        }, 800);
      } 

    const getStatus = () => {
        if (data.dbDeleted){
            return (
                <button className="btn btn-danger">Deleted</button>
            )
        } else if (data.dbProvisioned === false) {
            return (
                <button className="btn btn-info">Provisioning</button>
            )
        } else if (data.deletionRequestDate !== "") {
            return (
                <button className="btn btn-warning">Pending deletion</button>
            )
        } else{
            return (
                <button className="btn btn-success">Available</button>
            )
        }
    }

    if (authValid) {
        // now, check if it is MY db
        if (data.creatorUserId === userId){

            return (
                <div className="create-entry container m-2">
                    <h2 className="mt-5">Database details</h2>
                    <h4>Status: {getStatus()}</h4>
                    <form>
                        <div className="form-group px-2">
                            <label className="fw-bold">Connection strings</label>
                            <div className="row">
                                <input id="connectionString" className="col form-control bg-success bg-gradient text-white" type="text" value={connectionString} readOnly disabled/>
                                <button type="button" className="btn btn-clipboard btn-outline-success col-sm-2"
                                onClick={() => {
                                    updateCopyButton(connectionString)
                                    }}>
                                    {copyButtonContent}
                                    </button>
                            </div>
                            <label className="fw-bold">PSQL Connection command</label>
                            <div className="row">
                                <input id="connectionString" className="col form-control bg-success bg-gradient text-white" type="text" value={psqlCommandString} readOnly disabled/>
                                <button type="button" className="btn btn-clipboard btn-outline-success col-sm-2"
                                onClick={() => {
                                    updateCopyButton(psqlCommandString)
                                    }}>
                                    {copyButtonContent}
                                    </button>  
                            </div>
                        </div>
    
    
                    <div className="form-group mt-3">
                        <label>User ID (automatically assigned based on your login)</label>
                        <input className="form-control" type="text" value={data.creatorUserId} readOnly disabled/>
                    </div>
    
                    <div className="form-group mt-3">
                        <label>Unique DB instance identifier (autogenerated)</label>
                        <input className="form-control" type="text" value={data.id} readOnly disabled/>
                    </div>
                    
                    <div className="form-group mt-3">
                        <label>Name of your DB instance</label>
                        <input className="form-control" type="text" value={data.dbName} readOnly disabled/>
                    </div>
    
                    <div className="form-group mt-3">
                        <label>Description of intended usage - Office location, project type, etc.</label>
                        <input className="form-control" type="text" value={data.description} readOnly disabled/>
                    </div>
    
    
                    <div className="form-group mt-3 row">
                        <div className="col">
                            <label>Date of creation</label>
                            <input className="form-control" type="text" value={formatUnixDate(Date.parse(data.created))} readOnly disabled/>
                        </div>
                        <div className="col">
                            <label>Date of deletion</label>
                            <input className="form-control" type="text" value={formatUnixDate(Date.parse(data.expiryDate))} readOnly disabled/>
                        </div>
                        <div className="col">
                            <label>Remaining lifetime (days)</label>
                            <input className="form-control" type="text" value={data.expiryDate !== undefined && computeDayDiffFromStringDates(data.expiryDate, data.created)} readOnly disabled/>
                        </div>
                    </div>
                </form>
    
                <button type="button" className="btn btn-warning mb-2 mt-3" data-bs-toggle="modal" data-bs-target="#exampleModal" disabled={(data.deletionRequestDate !== "") || (!data.dbProvisioned)}>
                    Start deletion request
                </button>
    
    
                <div className="modal fade" id="exampleModal" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div className="modal-dialog" role="document">
                    <div className="modal-content">
                        <div className="modal-header">
                            <h5 className="modal-title" id="exampleModalLabel">DB Deletion request</h5>
                            <button type="button" className="btn btn-secondary-outline border" data-bs-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                            <div className="modal-body">
                                <button type="button" onClick={() => handleDeletionRequest()} data-bs-dismiss="modal" className="btn container btn-danger centered">Confirm deletion</button>
                            </div>
                        </div>
                </div>
                </div>
                </div>
            );
        }
        else{
            return (
                <div className="create-entry container m-2">
                <h2 className="mt-5">You have no access rights to this DB.</h2>
                </div>
            )
        }

    }
    else {
        return (
            <div className="create-entry container m-2">
            <h2 className="mt-5">You must be logged in to see details</h2>
            </div>
            )
    }
}
 
export default DetailView;